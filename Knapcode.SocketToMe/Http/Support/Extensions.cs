using System.Collections.Generic;
using System.Net.Http;

namespace Knapcode.SocketToMe.Http
{
    public static class Extensions
    {
        /// <summary>Try to get the redirect history from a <see cref="HttpRequestMessage" />, generated by <see cref="RedirectingHandler" />.</summary>
        /// <param name="request">The request.</param>
        /// <param name="redirectHistory">The history.</param>
        /// <returns>Whether or not the history was found.</returns>
        public static bool TryGetRedirectHistory(this HttpRequestMessage request, out IEnumerable<HttpMessageExchange> redirectHistory)
        {
            return TryGetHttpRequestMessageProperty(request, RedirectingHandler.RedirectHistoryKey, out redirectHistory);
        }

        private static bool TryGetHttpRequestMessageProperty<T>(this HttpRequestMessage request, string key, out T value)
        {
            object rawObject;
            if (!request.Properties.TryGetValue(key, out rawObject) || !(rawObject is T))
            {
                value = default(T);
                return false;
            }

            value = (T)rawObject;
            return true;
        }
    }
}
